{"ast":null,"code":"var _jsxFileName = \"/Users/kunalgulati/Desktop/SFU/code/job/hatchways/client/components/DemoBar.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n    }\n  }\n}))(InputBase);\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  },\n  hashtagsFormControl: {\n    margin: theme.spacing(1),\n    minWidth: '30%'\n  },\n  sortByFormControl: {\n    margin: theme.spacing(1),\n    minWidth: '15%'\n  },\n  directionFormControl: {\n    margin: theme.spacing(1),\n    minWidth: '15%'\n  },\n  searchButton: {\n    minWidth: '15%',\n    backgroundColor: '#29BA80',\n    color: '#ffffff'\n  }\n}));\nexport default function CustomizedSelects() {\n  const classes = useStyles();\n  const [hashtags, setHashtags] = React.useState('');\n  const [sortBy, setSortBy] = React.useState('likes');\n  const [direction, setDirection] = React.useState('asc');\n  /** Checkbox */\n\n  const [hashtagsState, setHashtagsState] = React.useState({\n    tech: true,\n    startup: false,\n    science: false\n  });\n  const {\n    gilad,\n    jason,\n    antoine\n  } = state;\n  const error = [gilad, jason, antoine].filter(v => v).length !== 2;\n\n  const handleHashtagsChange = event => {\n    setHashtagsState(_objectSpread(_objectSpread({}, hashtagsState), {}, {\n      [event.target.name]: event.target.checked\n    }));\n  };\n\n  const handleSortByChange = event => {\n    setSortBy(event.target.value);\n  };\n\n  const handleDirectionChange = event => {\n    setDirection(event.target.value);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(FormControl, {\n    variant: \"filled\",\n    className: classes.hashtagsFormControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(InputLabel, {\n    id: \"demo-simple-select-filled-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Hashtings\"), __jsx(Select, {\n    labelId: \"demo-simple-select-filled-label\",\n    id: \"demo-simple-select-filled\",\n    value: hashtags // onChange={handleHashtagsChange}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, __jsx(MenuItem, {\n    value: \"health\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: antoine,\n      onChange: handleHashtagsChange,\n      name: \"antoine\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 24\n      }\n    }),\n    label: \"Antoine Llorca\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })), __jsx(MenuItem, {\n    value: \"health\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: antoine,\n      onChange: handleHashtagsChange,\n      name: \"antoine\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 24\n      }\n    }),\n    label: \"Antoine Llorca\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  })), __jsx(MenuItem, {\n    value: \"health\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: antoine,\n      onChange: handleHashtagsChange,\n      name: \"antoine\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 24\n      }\n    }),\n    label: \"Antoine Llorca\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  })), __jsx(MenuItem, {\n    value: \"health\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: gilad,\n      onChange: handleChange,\n      name: \"gilad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 24\n      }\n    }),\n    label: \"Gilad Gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }))))), __jsx(FormControl, {\n    variant: \"filled\",\n    className: classes.sortByFormControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    id: \"demo-simple-select-filled-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, \"SortBy\"), __jsx(Select, {\n    labelId: \"demo-simple-select-filled-label\",\n    id: \"demo-simple-select-filled\",\n    value: sortBy,\n    onChange: handleSortByChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, __jsx(MenuItem, {\n    value: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, \"Post Id\"), __jsx(MenuItem, {\n    value: \"authorId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, \"Author Id\"), __jsx(MenuItem, {\n    value: \"likes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \"Likes\"), __jsx(MenuItem, {\n    value: \"popularity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, \"Popularity\"), __jsx(MenuItem, {\n    value: \"reads\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, \"Reads\"))), __jsx(FormControl, {\n    variant: \"filled\",\n    className: classes.directionFormControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    id: \"demo-simple-select-filled-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, \"Direction\"), __jsx(Select, {\n    labelId: \"demo-simple-select-filled-label\",\n    id: \"demo-simple-select-filled\",\n    value: direction,\n    onChange: handleDirectionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, __jsx(MenuItem, {\n    value: \"asc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, \"Ascending\"), __jsx(MenuItem, {\n    value: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \"Descending\"))), __jsx(Button, {\n    variant: \"contained\",\n    className: classes.searchButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, \"Search\")));\n}","map":{"version":3,"sources":["/Users/kunalgulati/Desktop/SFU/code/job/hatchways/client/components/DemoBar.js"],"names":["React","makeStyles","withStyles","InputLabel","MenuItem","Select","InputBase","Button","Typography","FormControl","FormGroup","FormControlLabel","FormHelperText","Checkbox","BootstrapInput","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","useStyles","margin","hashtagsFormControl","minWidth","sortByFormControl","directionFormControl","searchButton","color","CustomizedSelects","classes","hashtags","setHashtags","useState","sortBy","setSortBy","direction","setDirection","hashtagsState","setHashtagsState","tech","startup","science","gilad","jason","antoine","state","error","filter","v","length","handleHashtagsChange","event","target","name","checked","handleSortByChange","value","handleDirectionChange","handleChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  hashtagsFormControl: {\n    margin: theme.spacing(1),\n    minWidth: '30%',\n  },\n  sortByFormControl: {\n    margin: theme.spacing(1),\n    minWidth: '15%',\n  },\n  directionFormControl: {\n    margin: theme.spacing(1),\n    minWidth: '15%',\n  },\n  searchButton:{\n    minWidth: '15%',\n    backgroundColor: '#29BA80',\n    color: '#ffffff'\n  }\n}));\n\nexport default function CustomizedSelects() {\n  const classes = useStyles();\n  const [hashtags, setHashtags] = React.useState('');\n  const [sortBy, setSortBy] = React.useState('likes');\n  const [direction, setDirection] = React.useState('asc');\n    /** Checkbox */\n    const [hashtagsState, setHashtagsState] = React.useState({\n      tech: true,\n      startup: false,\n      science: false,\n    });\n  \n  const { gilad, jason, antoine } = state;\n  const error = [gilad, jason, antoine].filter((v) => v).length !== 2;\n\n  const handleHashtagsChange = (event) => {\n    setHashtagsState({ ...hashtagsState, [event.target.name]: event.target.checked });\n  };\n  const handleSortByChange = (event) => {\n    setSortBy(event.target.value);\n  };\n  const handleDirectionChange = (event) => {\n    setDirection(event.target.value);\n  };\n\n  return (\n    <>\n      {/* Hashtings Input */}\n      <FormControl variant=\"filled\" className={classes.hashtagsFormControl}>\n        <FormGroup>\n          <InputLabel id=\"demo-simple-select-filled-label\">Hashtings</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-filled-label\"\n            id=\"demo-simple-select-filled\"\n            value={hashtags}\n            // onChange={handleHashtagsChange}\n          >\n          <MenuItem value={\"health\"}>\n            <FormControlLabel\n              control={<Checkbox checked={antoine} onChange={handleHashtagsChange} name=\"antoine\" />}\n              label=\"Antoine Llorca\"\n            />\n          </MenuItem>\n          <MenuItem value={\"health\"}>\n            <FormControlLabel\n              control={<Checkbox checked={antoine} onChange={handleHashtagsChange} name=\"antoine\" />}\n              label=\"Antoine Llorca\"\n            />\n          </MenuItem>\n          <MenuItem value={\"health\"}>\n            <FormControlLabel\n              control={<Checkbox checked={antoine} onChange={handleHashtagsChange} name=\"antoine\" />}\n              label=\"Antoine Llorca\"\n            />\n          </MenuItem>\n          <MenuItem value={\"health\"}>\n            <FormControlLabel\n              control={<Checkbox checked={gilad} onChange={handleChange} name=\"gilad\" />}\n              label=\"Gilad Gray\"\n            />\n          </MenuItem>\n          {/* <MenuItem value={\"tech\"}>Tech</MenuItem>\n          <MenuItem value={\"startups\"}>Startups</MenuItem>\n          <MenuItem value={\"history\"}>History</MenuItem>\n          <MenuItem value={\"science\"}>Science</MenuItem>\n          <MenuItem value={\"design\"}>Design</MenuItem>\n          <MenuItem value={\"culture\"}>Culture</MenuItem>\n          <MenuItem value={\"politics\"}>Politics</MenuItem> */}\n        </Select>\n        </FormGroup>\n      </FormControl>\n\n\n        {/* <InputLabel id=\"demo-simple-select-filled-label\">Hashtings</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-filled-label\"\n          id=\"demo-simple-select-filled\"\n          value={hashtags}\n          onChange={handleHashtagsChange}\n        >\n          <MenuItem value={\"health\"}>Health</MenuItem>\n          <MenuItem value={\"tech\"}>Tech</MenuItem>\n          <MenuItem value={\"startups\"}>Startups</MenuItem>\n          <MenuItem value={\"history\"}>History</MenuItem>\n          <MenuItem value={\"science\"}>Science</MenuItem>\n          <MenuItem value={\"design\"}>Design</MenuItem>\n          <MenuItem value={\"culture\"}>Culture</MenuItem>\n          <MenuItem value={\"politics\"}>Politics</MenuItem>\n        </Select>\n      </FormControl> */}\n      {/* SortBy Input */}\n      <FormControl variant=\"filled\" className={classes.sortByFormControl}>\n        <InputLabel id=\"demo-simple-select-filled-label\">SortBy</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-filled-label\"\n          id=\"demo-simple-select-filled\"\n          value={sortBy}\n          onChange={handleSortByChange}\n        >\n          <MenuItem value={\"id\"}>Post Id</MenuItem>\n          <MenuItem value={\"authorId\"}>Author Id</MenuItem>\n          <MenuItem value={\"likes\"}>Likes</MenuItem>\n          <MenuItem value={\"popularity\"}>Popularity</MenuItem>\n          <MenuItem value={\"reads\"}>Reads</MenuItem>\n        </Select>\n      </FormControl>\n      {/* SortBy Input */}\n      <FormControl variant=\"filled\" className={classes.directionFormControl}>\n        <InputLabel id=\"demo-simple-select-filled-label\">Direction</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-filled-label\"\n          id=\"demo-simple-select-filled\"\n          value={direction}\n          onChange={handleDirectionChange}\n        >\n          <MenuItem value={\"asc\"}>Ascending</MenuItem>\n          <MenuItem value={\"desc\"}>Descending</MenuItem>\n        </Select>\n      </FormControl>\n      <Button variant=\"contained\" className={classes.searchButton}>\n      <Typography>Search</Typography></Button>\n\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}