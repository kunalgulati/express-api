{"ast":null,"code":"var _jsxFileName = \"/Users/kunalgulati/Desktop/SFU/code/job/hatchways/client/components/DemoBar.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n    }\n  }\n}))(InputBase);\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  },\n  hashtagsFormControl: {\n    margin: theme.spacing(1),\n    minWidth: '30%'\n  },\n  sortByFormControl: {\n    margin: theme.spacing(1),\n    minWidth: '15%'\n  },\n  directionFormControl: {\n    margin: theme.spacing(1),\n    minWidth: '15%'\n  },\n  searchButton: {\n    minWidth: '15%',\n    backgroundColor: '#29BA80',\n    color: '#ffffff'\n  }\n}));\nexport default function CustomizedSelects() {\n  const classes = useStyles();\n  const [hashtags, setHashtags] = React.useState('');\n  const [sortBy, setSortBy] = React.useState('likes');\n  const [direction, setDirection] = React.useState('asc');\n  /** Checkbox */\n\n  const [hashtagsState, setHashtagsState] = React.useState({\n    tech: false,\n    startup: false,\n    science: false,\n    health: false,\n    history: false,\n    design: false,\n    culture: false,\n    politics: false\n  });\n  const {\n    tech,\n    startup,\n    science,\n    health,\n    history,\n    design,\n    culture,\n    politics\n  } = hashtagsState;\n\n  const handleHashtagsChange = event => {\n    // if(hashtags == ''){ console.log(\"wne\"); setHashtags(event.target.name)} else{ setHashtags( `${hashtags},${event.target.name}` )  }\n    setHashtagsState(_objectSpread(_objectSpread({}, hashtagsState), {}, {\n      [event.target.name]: event.target.checked\n    }));\n  };\n\n  const handleSortByChange = event => {\n    setSortBy(event.target.value);\n  };\n\n  const handleDirectionChange = event => {\n    setDirection(event.target.value);\n  };\n\n  const handleSearchClick = () => {\n    const tagsArray = [];\n    let tagsParam = '';\n    /** Set the tags */\n\n    for (const key in hashtagsState) {\n      if (hashtagsState[key] == true) {\n        tagsArray.push(key);\n      }\n    }\n\n    if (tagsArray.length != 0) {\n      tagsParam = tagsArray.toString();\n    }\n\n    const url = `http://hatchways.io/api/assessment/solution/posts?tags=${tagsParam}&sortBy=${sortBy}&direction=${direction}`;\n    console.log(url);\n    fetch(url).then(response => console.log(response.json())).then(data => this.setState({\n      hits: data.hits\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(FormControl, {\n    variant: \"filled\",\n    className: classes.hashtagsFormControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, __jsx(InputLabel, {\n    id: \"demo-simple-select-filled-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"Select Atleast one Hashting\"), __jsx(Select, {\n    labelId: \"demo-simple-select-filled-label\",\n    id: \"demo-simple-select-filled\",\n    value: hashtags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, __jsx(MenuItem, {\n    value: \"tech\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: tech,\n      onChange: handleHashtagsChange,\n      name: \"tech\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 26\n      }\n    }),\n    label: \"Tech\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  })), __jsx(MenuItem, {\n    value: \"startup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: startup,\n      onChange: handleHashtagsChange,\n      name: \"startup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 26\n      }\n    }),\n    label: \"Start-Up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  })), __jsx(MenuItem, {\n    value: \"science\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: science,\n      onChange: handleHashtagsChange,\n      name: \"science\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 26\n      }\n    }),\n    label: \"Science\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  })), __jsx(MenuItem, {\n    value: \"health\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: health,\n      onChange: handleHashtagsChange,\n      name: \"health\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 26\n      }\n    }),\n    label: \"Health\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  })), __jsx(MenuItem, {\n    value: \"history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: history,\n      onChange: handleHashtagsChange,\n      name: \"history\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 26\n      }\n    }),\n    label: \"History\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  })), __jsx(MenuItem, {\n    value: \"design\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: design,\n      onChange: handleHashtagsChange,\n      name: \"design\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 26\n      }\n    }),\n    label: \"Design\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  })), __jsx(MenuItem, {\n    value: \"culture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: culture,\n      onChange: handleHashtagsChange,\n      name: \"culture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 26\n      }\n    }),\n    label: \"Culture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  })), __jsx(MenuItem, {\n    value: \"politics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: politics,\n      onChange: handleHashtagsChange,\n      name: \"politics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 26\n      }\n    }),\n    label: \"Politics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }))))), __jsx(FormControl, {\n    variant: \"filled\",\n    className: classes.sortByFormControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    id: \"demo-simple-select-filled-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, \"SortBy\"), __jsx(Select, {\n    labelId: \"demo-simple-select-filled-label\",\n    id: \"demo-simple-select-filled\",\n    value: sortBy,\n    onChange: handleSortByChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, __jsx(MenuItem, {\n    value: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, \"Post Id\"), __jsx(MenuItem, {\n    value: \"authorId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, \"Author Id\"), __jsx(MenuItem, {\n    value: \"likes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, \"Likes\"), __jsx(MenuItem, {\n    value: \"popularity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, \"Popularity\"), __jsx(MenuItem, {\n    value: \"reads\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, \"Reads\"))), __jsx(FormControl, {\n    variant: \"filled\",\n    className: classes.directionFormControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    id: \"demo-simple-select-filled-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, \"Direction\"), __jsx(Select, {\n    labelId: \"demo-simple-select-filled-label\",\n    id: \"demo-simple-select-filled\",\n    value: direction,\n    onChange: handleDirectionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, __jsx(MenuItem, {\n    value: \"asc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, \"Ascending\"), __jsx(MenuItem, {\n    value: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, \"Descending\"))), __jsx(Button, {\n    variant: \"contained\",\n    className: classes.searchButton,\n    onClick: handleSearchClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, \"Search\")));\n}","map":{"version":3,"sources":["/Users/kunalgulati/Desktop/SFU/code/job/hatchways/client/components/DemoBar.js"],"names":["React","makeStyles","withStyles","InputLabel","MenuItem","Select","InputBase","Button","Typography","FormControl","FormGroup","FormControlLabel","FormHelperText","Checkbox","BootstrapInput","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","useStyles","margin","hashtagsFormControl","minWidth","sortByFormControl","directionFormControl","searchButton","color","CustomizedSelects","classes","hashtags","setHashtags","useState","sortBy","setSortBy","direction","setDirection","hashtagsState","setHashtagsState","tech","startup","science","health","history","design","culture","politics","handleHashtagsChange","event","target","name","checked","handleSortByChange","value","handleDirectionChange","handleSearchClick","tagsArray","tagsParam","key","push","length","toString","url","console","log","fetch","then","response","json","data","setState","hits"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  hashtagsFormControl: {\n    margin: theme.spacing(1),\n    minWidth: '30%',\n  },\n  sortByFormControl: {\n    margin: theme.spacing(1),\n    minWidth: '15%',\n  },\n  directionFormControl: {\n    margin: theme.spacing(1),\n    minWidth: '15%',\n  },\n  searchButton: {\n    minWidth: '15%',\n    backgroundColor: '#29BA80',\n    color: '#ffffff'\n  }\n}));\n\nexport default function CustomizedSelects() {\n  const classes = useStyles();\n  const [hashtags, setHashtags] = React.useState('');\n  const [sortBy, setSortBy] = React.useState('likes');\n  const [direction, setDirection] = React.useState('asc');\n  /** Checkbox */\n  const [hashtagsState, setHashtagsState] = React.useState({\n    tech: false,\n    startup: false,\n    science: false,\n    health: false,\n    history: false,\n    design: false,\n    culture: false,\n    politics: false,\n\n  });\n\n  const { tech, startup, science, health, history, design, culture, politics } = hashtagsState;\n\n  const handleHashtagsChange = (event) => {\n    // if(hashtags == ''){ console.log(\"wne\"); setHashtags(event.target.name)} else{ setHashtags( `${hashtags},${event.target.name}` )  }\n    setHashtagsState({ ...hashtagsState, [event.target.name]: event.target.checked });\n  };\n  const handleSortByChange = (event) => {\n    setSortBy(event.target.value);\n  };\n  const handleDirectionChange = (event) => {\n    setDirection(event.target.value);\n  };\n\n  const handleSearchClick = () => {\n    const tagsArray = [];\n    let tagsParam = '';\n\n    /** Set the tags */\n    for (const key in hashtagsState) { if (hashtagsState[key] == true) { tagsArray.push(key) } }\n    if (tagsArray.length != 0) { tagsParam = tagsArray.toString() }\n\n    const url = `http://hatchways.io/api/assessment/solution/posts?tags=${tagsParam}&sortBy=${sortBy}&direction=${direction}`\n    console.log(url);\n\n    fetch(url)\n      .then(response => console.log(response.json()))\n      .then(data => this.setState({ hits: data.hits }));\n  }\n\n  return (\n    <>\n      {/* Hashtings Input */}\n      <FormControl variant=\"filled\" className={classes.hashtagsFormControl}>\n        <FormGroup>\n          <InputLabel id=\"demo-simple-select-filled-label\">Select Atleast one Hashting</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-filled-label\"\n            id=\"demo-simple-select-filled\"\n            value={hashtags}\n          >\n            <MenuItem value={\"tech\"}>\n              <FormControlLabel\n                control={<Checkbox checked={tech} onChange={handleHashtagsChange} name=\"tech\" />}\n                label=\"Tech\"\n              />\n            </MenuItem>\n            <MenuItem value={\"startup\"}>\n              <FormControlLabel\n                control={<Checkbox checked={startup} onChange={handleHashtagsChange} name=\"startup\" />}\n                label=\"Start-Up\"\n              />\n            </MenuItem>\n            <MenuItem value={\"science\"}>\n              <FormControlLabel\n                control={<Checkbox checked={science} onChange={handleHashtagsChange} name=\"science\" />}\n                label=\"Science\"\n              />\n            </MenuItem>\n            <MenuItem value={\"health\"}>\n              <FormControlLabel\n                control={<Checkbox checked={health} onChange={handleHashtagsChange} name=\"health\" />}\n                label=\"Health\"\n              />\n            </MenuItem>\n            <MenuItem value={\"history\"}>\n              <FormControlLabel\n                control={<Checkbox checked={history} onChange={handleHashtagsChange} name=\"history\" />}\n                label=\"History\"\n              />\n            </MenuItem>\n            <MenuItem value={\"design\"}>\n              <FormControlLabel\n                control={<Checkbox checked={design} onChange={handleHashtagsChange} name=\"design\" />}\n                label=\"Design\"\n              />\n            </MenuItem>\n            <MenuItem value={\"culture\"}>\n              <FormControlLabel\n                control={<Checkbox checked={culture} onChange={handleHashtagsChange} name=\"culture\" />}\n                label=\"Culture\"\n              />\n            </MenuItem>\n            <MenuItem value={\"politics\"}>\n              <FormControlLabel\n                control={<Checkbox checked={politics} onChange={handleHashtagsChange} name=\"politics\" />}\n                label=\"Politics\"\n              />\n            </MenuItem>\n          </Select>\n        </FormGroup>\n      </FormControl>\n\n      {/* SortBy Input */}\n      <FormControl variant=\"filled\" className={classes.sortByFormControl}>\n        <InputLabel id=\"demo-simple-select-filled-label\">SortBy</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-filled-label\"\n          id=\"demo-simple-select-filled\"\n          value={sortBy}\n          onChange={handleSortByChange}\n        >\n          <MenuItem value={\"id\"}>Post Id</MenuItem>\n          <MenuItem value={\"authorId\"}>Author Id</MenuItem>\n          <MenuItem value={\"likes\"}>Likes</MenuItem>\n          <MenuItem value={\"popularity\"}>Popularity</MenuItem>\n          <MenuItem value={\"reads\"}>Reads</MenuItem>\n        </Select>\n      </FormControl>\n      {/* SortBy Input */}\n      <FormControl variant=\"filled\" className={classes.directionFormControl}>\n        <InputLabel id=\"demo-simple-select-filled-label\">Direction</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-filled-label\"\n          id=\"demo-simple-select-filled\"\n          value={direction}\n          onChange={handleDirectionChange}\n        >\n          <MenuItem value={\"asc\"}>Ascending</MenuItem>\n          <MenuItem value={\"desc\"}>Descending</MenuItem>\n        </Select>\n      </FormControl>\n      <Button variant=\"contained\" className={classes.searchButton} onClick={handleSearchClick}>\n        <Typography>Search</Typography></Button>\n\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}