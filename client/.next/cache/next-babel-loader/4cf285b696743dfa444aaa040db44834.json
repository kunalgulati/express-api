{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/kunalgulati/Desktop/SFU/code/job/hatchways/client/components/DemoBar.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nvar BootstrapInput = withStyles(function (theme) {\n  return {\n    root: {\n      'label + &': {\n        marginTop: theme.spacing(3)\n      }\n    },\n    input: {\n      borderRadius: 4,\n      position: 'relative',\n      backgroundColor: theme.palette.background.paper,\n      border: '1px solid #ced4da',\n      fontSize: 16,\n      padding: '10px 26px 10px 12px',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n      '&:focus': {\n        borderRadius: 4,\n        borderColor: '#80bdff',\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n      }\n    }\n  };\n})(InputBase);\nvar useStyles = makeStyles(function (theme) {\n  return {\n    margin: {\n      margin: theme.spacing(1)\n    },\n    hashtagsFormControl: {\n      margin: theme.spacing(1),\n      minWidth: '30%'\n    },\n    sortByFormControl: {\n      margin: theme.spacing(1),\n      minWidth: '15%'\n    },\n    directionFormControl: {\n      margin: theme.spacing(1),\n      minWidth: '15%'\n    },\n    searchButton: {\n      minWidth: '15%',\n      backgroundColor: '#29BA80',\n      color: '#ffffff'\n    }\n  };\n});\nexport default function CustomizedSelects() {\n  _s();\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      hashtags = _React$useState2[0],\n      setHashtags = _React$useState2[1];\n\n  var _React$useState3 = React.useState('likes'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      sortBy = _React$useState4[0],\n      setSortBy = _React$useState4[1];\n\n  var _React$useState5 = React.useState('asc'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      direction = _React$useState6[0],\n      setDirection = _React$useState6[1];\n\n  var handleHashtagsChange = function handleHashtagsChange(event) {\n    setHashtags(event.target.value);\n  };\n\n  var handleSortByChange = function handleSortByChange(event) {\n    setSortBy(event.target.value);\n  };\n\n  var handleDirectionChange = function handleDirectionChange(event) {\n    setDirection(event.target.value);\n  };\n  /** Checkbox */\n\n\n  var _React$useState7 = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      state = _React$useState8[0],\n      setState = _React$useState8[1];\n\n  var handleChange = function handleChange(event) {\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, event.target.name, event.target.checked)));\n  };\n\n  var gilad = state.gilad,\n      jason = state.jason,\n      antoine = state.antoine;\n  var error = [gilad, jason, antoine].filter(function (v) {\n    return v;\n  }).length !== 2;\n  return __jsx(React.Fragment, null, __jsx(FormControl, {\n    variant: \"filled\",\n    className: classes.hashtagsFormControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: gilad,\n      onChange: handleChange,\n      name: \"gilad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 22\n      }\n    }),\n    label: \"Gilad Gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: jason,\n      onChange: handleChange,\n      name: \"jason\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 22\n      }\n    }),\n    label: \"Jason Killian\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: antoine,\n      onChange: handleChange,\n      name: \"antoine\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 22\n      }\n    }),\n    label: \"Antoine Llorca\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }))), __jsx(FormControl, {\n    variant: \"filled\",\n    className: classes.sortByFormControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    id: \"demo-simple-select-filled-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"SortBy\"), __jsx(Select, {\n    labelId: \"demo-simple-select-filled-label\",\n    id: \"demo-simple-select-filled\",\n    value: sortBy,\n    onChange: handleSortByChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, __jsx(MenuItem, {\n    value: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Post Id\"), __jsx(MenuItem, {\n    value: \"authorId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"Author Id\"), __jsx(MenuItem, {\n    value: \"likes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"Likes\"), __jsx(MenuItem, {\n    value: \"popularity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"Popularity\"), __jsx(MenuItem, {\n    value: \"reads\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"Reads\"))), __jsx(FormControl, {\n    variant: \"filled\",\n    className: classes.directionFormControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    id: \"demo-simple-select-filled-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, \"Direction\"), __jsx(Select, {\n    labelId: \"demo-simple-select-filled-label\",\n    id: \"demo-simple-select-filled\",\n    value: direction,\n    onChange: handleDirectionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, __jsx(MenuItem, {\n    value: \"asc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, \"Ascending\"), __jsx(MenuItem, {\n    value: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"Descending\"))), __jsx(Button, {\n    variant: \"contained\",\n    className: classes.searchButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, \"Search\")));\n}\n\n_s(CustomizedSelects, \"yv48XCv7ijQ5VJbfmB5I8MiD7w8=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomizedSelects;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedSelects\");","map":{"version":3,"sources":["/Users/kunalgulati/Desktop/SFU/code/job/hatchways/client/components/DemoBar.js"],"names":["React","makeStyles","withStyles","InputLabel","MenuItem","FormControl","Select","InputBase","Button","Typography","BootstrapInput","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","useStyles","margin","hashtagsFormControl","minWidth","sortByFormControl","directionFormControl","searchButton","color","CustomizedSelects","classes","useState","hashtags","setHashtags","sortBy","setSortBy","direction","setDirection","handleHashtagsChange","event","target","value","handleSortByChange","handleDirectionChange","gilad","jason","antoine","state","setState","handleChange","name","checked","error","filter","v","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  hashtagsFormControl: {\n    margin: theme.spacing(1),\n    minWidth: '30%',\n  },\n  sortByFormControl: {\n    margin: theme.spacing(1),\n    minWidth: '15%',\n  },\n  directionFormControl: {\n    margin: theme.spacing(1),\n    minWidth: '15%',\n  },\n  searchButton:{\n    minWidth: '15%',\n    backgroundColor: '#29BA80',\n    color: '#ffffff'\n  }\n}));\n\nexport default function CustomizedSelects() {\n  const classes = useStyles();\n  const [hashtags, setHashtags] = React.useState('');\n  const [sortBy, setSortBy] = React.useState('likes');\n  const [direction, setDirection] = React.useState('asc');\n\n  const handleHashtagsChange = (event) => {\n    setHashtags(event.target.value);\n  };\n  const handleSortByChange = (event) => {\n    setSortBy(event.target.value);\n  };\n  const handleDirectionChange = (event) => {\n    setDirection(event.target.value);\n  };\n/** Checkbox */\nconst [state, setState] = React.useState({\n  gilad: true,\n  jason: false,\n  antoine: false,\n});\nconst handleChange = (event) => {\n  setState({ ...state, [event.target.name]: event.target.checked });\n};\n\nconst { gilad, jason, antoine } = state;\nconst error = [gilad, jason, antoine].filter((v) => v).length !== 2;\n  return (\n    <>\n      {/* Hashtings Input */}\n      <FormControl variant=\"filled\" className={classes.hashtagsFormControl}>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange} name=\"gilad\" />}\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange} name=\"jason\" />}\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={antoine} onChange={handleChange} name=\"antoine\" />}\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n      </FormControl>\n\n\n        {/* <InputLabel id=\"demo-simple-select-filled-label\">Hashtings</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-filled-label\"\n          id=\"demo-simple-select-filled\"\n          value={hashtags}\n          onChange={handleHashtagsChange}\n        >\n          <MenuItem value={\"health\"}>Health</MenuItem>\n          <MenuItem value={\"tech\"}>Tech</MenuItem>\n          <MenuItem value={\"startups\"}>Startups</MenuItem>\n          <MenuItem value={\"history\"}>History</MenuItem>\n          <MenuItem value={\"science\"}>Science</MenuItem>\n          <MenuItem value={\"design\"}>Design</MenuItem>\n          <MenuItem value={\"culture\"}>Culture</MenuItem>\n          <MenuItem value={\"politics\"}>Politics</MenuItem>\n        </Select>\n      </FormControl> */}\n      {/* SortBy Input */}\n      <FormControl variant=\"filled\" className={classes.sortByFormControl}>\n        <InputLabel id=\"demo-simple-select-filled-label\">SortBy</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-filled-label\"\n          id=\"demo-simple-select-filled\"\n          value={sortBy}\n          onChange={handleSortByChange}\n        >\n          <MenuItem value={\"id\"}>Post Id</MenuItem>\n          <MenuItem value={\"authorId\"}>Author Id</MenuItem>\n          <MenuItem value={\"likes\"}>Likes</MenuItem>\n          <MenuItem value={\"popularity\"}>Popularity</MenuItem>\n          <MenuItem value={\"reads\"}>Reads</MenuItem>\n        </Select>\n      </FormControl>\n      {/* SortBy Input */}\n      <FormControl variant=\"filled\" className={classes.directionFormControl}>\n        <InputLabel id=\"demo-simple-select-filled-label\">Direction</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-filled-label\"\n          id=\"demo-simple-select-filled\"\n          value={direction}\n          onChange={handleDirectionChange}\n        >\n          <MenuItem value={\"asc\"}>Ascending</MenuItem>\n          <MenuItem value={\"desc\"}>Descending</MenuItem>\n        </Select>\n      </FormControl>\n      <Button variant=\"contained\" className={classes.searchButton}>\n      <Typography>Search</Typography></Button>\n\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}